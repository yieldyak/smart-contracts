{
  "address": "0x70C9994Bd1A5ea76279a8eEDDA756C064Cc04026",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "accountBalancesOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "accountsBalanceOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "accountsBalancesOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe48f336882cab365136e0ce50d7abdbbc1dd2edeeff9ee813ec496456bbac89c",
  "receipt": {
    "to": null,
    "from": "0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44",
    "contractAddress": "0x70C9994Bd1A5ea76279a8eEDDA756C064Cc04026",
    "transactionIndex": 0,
    "gasUsed": "554171",
    "logsBloom": "0x
    "blockHash": "0x3f908d8a661866c21dadde6c9ba38da60da613b07c5fbdc333774476acfff1f1",
    "transactionHash": "0xe48f336882cab365136e0ce50d7abdbbc1dd2edeeff9ee813ec496456bbac89c",
    "logs": [],
    "blockNumber": 706601,
    "cumulativeGasUsed": "554171",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b79384a18970d7a31640b3591bbd0f68",
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"accountBalancesOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"accountsBalanceOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"accountsBalancesOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accountBalancesOf(address,address[])\":{\"params\":{\"account\":\"account\",\"tokenAddresses\":\"list of token addresses\"}},\"accountsBalanceOf(address[],address)\":{\"params\":{\"accounts\":\"list of accounts\",\"tokenAddress\":\"token addresses\"}},\"accountsBalancesOf(address[],address[])\":{\"params\":{\"accounts\":\"list of accounts\",\"tokenAddresses\":\"list of token addresses\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accountBalancesOf(address,address[])\":{\"notice\":\"Fetch many token balances for a single account\"},\"accountsBalanceOf(address[],address)\":{\"notice\":\"Fetch a token balance for many accounts\"},\"accountsBalancesOf(address[],address[])\":{\"notice\":\"Fetch many token balances for a many accounts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/BalancesOfHelper.sol\":\"BalancesOfHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/helpers/BalancesOfHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IERC20 {\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\\ncontract BalancesOfHelper {\\n\\n  constructor() {}\\n\\n  /**\\n   * @notice Fetch many token balances for a single account\\n   * @param account account\\n   * @param tokenAddresses list of token addresses\\n   */\\n  function accountBalancesOf(address account, address[] memory tokenAddresses) public view returns (uint[] memory) {\\n    uint[] memory balances = new uint[](tokenAddresses.length);\\n    for (uint i = 0; i < tokenAddresses.length; i++) {\\n        uint balance = IERC20(tokenAddresses[i]).balanceOf(account);\\n        balances[i] = balance;\\n    }\\n    return balances;\\n  }\\n\\n  /**\\n   * @notice Fetch many token balances for a many accounts\\n   * @param accounts list of accounts\\n   * @param tokenAddresses list of token addresses\\n   */\\n  function accountsBalancesOf(address[] memory accounts, address[] memory tokenAddresses) public view returns (uint[] memory) {\\n    require(accounts.length == tokenAddresses.length, \\\"not same length\\\");\\n    uint[] memory balances = new uint[](tokenAddresses.length);\\n    for (uint i = 0; i < tokenAddresses.length; i++) {\\n        uint balance = IERC20(tokenAddresses[i]).balanceOf(accounts[i]);\\n        balances[i] = balance;\\n    }\\n    return balances;\\n  }\\n\\n  /**\\n   * @notice Fetch a token balance for many accounts\\n   * @param accounts list of accounts\\n   * @param tokenAddress token addresses\\n   */\\n  function accountsBalanceOf(address[] memory accounts, address tokenAddress) public view returns (uint[] memory) {\\n    uint[] memory balances = new uint[](accounts.length);\\n    for (uint i = 0; i < accounts.length; i++) {\\n        uint balance = IERC20(tokenAddress).balanceOf(accounts[i]);\\n        balances[i] = balance;\\n    }\\n    return balances;\\n  }\\n}\",\"keccak256\":\"0xc24fd2b3191f547e884dbb1467a90e98f32bed11923d33f78992868f5fb136e3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610913806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630b5cb275146100465780633a204709146100765780637dbb6f26146100a6575b600080fd5b610060600480360381019061005b91906105b0565b6100d6565b60405161006d9190610788565b60405180910390f35b610090600480360381019061008b919061055c565b610201565b60405161009d9190610788565b60405180910390f35b6100c060048036038101906100bb9190610604565b61032c565b6040516100cd9190610788565b60405180910390f35b606080835167ffffffffffffffff811180156100f157600080fd5b506040519080825280602002602001820160405280156101205781602001602082028036833780820191505090505b50905060005b84518110156101f65760008473ffffffffffffffffffffffffffffffffffffffff166370a0823187848151811061015957fe5b60200260200101516040518263ffffffff1660e01b815260040161017d919061076d565b60206040518083038186803b15801561019557600080fd5b505afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd9190610670565b9050808383815181106101dc57fe5b602002602001018181525050508080600101915050610126565b508091505092915050565b606080825167ffffffffffffffff8111801561021c57600080fd5b5060405190808252806020026020018201604052801561024b5781602001602082028036833780820191505090505b50905060005b835181101561032157600084828151811061026857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016102a8919061076d565b60206040518083038186803b1580156102c057600080fd5b505afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610670565b90508083838151811061030757fe5b602002602001018181525050508080600101915050610251565b508091505092915050565b60608151835114610372576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610369906107aa565b60405180910390fd5b6060825167ffffffffffffffff8111801561038c57600080fd5b506040519080825280602002602001820160405280156103bb5781602001602082028036833780820191505090505b50905060005b83518110156104a45760008482815181106103d857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a0823187848151811061040757fe5b60200260200101516040518263ffffffff1660e01b815260040161042b919061076d565b60206040518083038186803b15801561044357600080fd5b505afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b9190610670565b90508083838151811061048a57fe5b6020026020010181815250505080806001019150506103c1565b508091505092915050565b6000813590506104be816108af565b92915050565b600082601f8301126104d557600080fd5b81356104e86104e3826107fb565b6107ca565b9150818183526020840193506020810190508385602084028201111561050d57600080fd5b60005b8381101561053d578161052388826104af565b845260208401935060208301925050600181019050610510565b5050505092915050565b600081519050610556816108c6565b92915050565b6000806040838503121561056f57600080fd5b600061057d858286016104af565b925050602083013567ffffffffffffffff81111561059a57600080fd5b6105a6858286016104c4565b9150509250929050565b600080604083850312156105c357600080fd5b600083013567ffffffffffffffff8111156105dd57600080fd5b6105e9858286016104c4565b92505060206105fa858286016104af565b9150509250929050565b6000806040838503121561061757600080fd5b600083013567ffffffffffffffff81111561063157600080fd5b61063d858286016104c4565b925050602083013567ffffffffffffffff81111561065a57600080fd5b610666858286016104c4565b9150509250929050565b60006020828403121561068257600080fd5b600061069084828501610547565b91505092915050565b60006106a5838361075e565b60208301905092915050565b6106ba81610871565b82525050565b60006106cb82610837565b6106d5818561084f565b93506106e083610827565b8060005b838110156107115781516106f88882610699565b975061070383610842565b9250506001810190506106e4565b5085935050505092915050565b600061072b600f83610860565b91507f6e6f742073616d65206c656e67746800000000000000000000000000000000006000830152602082019050919050565b610767816108a3565b82525050565b600060208201905061078260008301846106b1565b92915050565b600060208201905081810360008301526107a281846106c0565b905092915050565b600060208201905081810360008301526107c38161071e565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156107f1576107f06108ad565b5b8060405250919050565b600067ffffffffffffffff821115610816576108156108ad565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061087c82610883565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565bfe5b6108b881610871565b81146108c357600080fd5b50565b6108cf816108a3565b81146108da57600080fd5b5056fea264697066735822122076a2a7b9a3170479be4e5b04b36dfd29145c955f8cccdee1d8e2173dc57cd2f564736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630b5cb275146100465780633a204709146100765780637dbb6f26146100a6575b600080fd5b610060600480360381019061005b91906105b0565b6100d6565b60405161006d9190610788565b60405180910390f35b610090600480360381019061008b919061055c565b610201565b60405161009d9190610788565b60405180910390f35b6100c060048036038101906100bb9190610604565b61032c565b6040516100cd9190610788565b60405180910390f35b606080835167ffffffffffffffff811180156100f157600080fd5b506040519080825280602002602001820160405280156101205781602001602082028036833780820191505090505b50905060005b84518110156101f65760008473ffffffffffffffffffffffffffffffffffffffff166370a0823187848151811061015957fe5b60200260200101516040518263ffffffff1660e01b815260040161017d919061076d565b60206040518083038186803b15801561019557600080fd5b505afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd9190610670565b9050808383815181106101dc57fe5b602002602001018181525050508080600101915050610126565b508091505092915050565b606080825167ffffffffffffffff8111801561021c57600080fd5b5060405190808252806020026020018201604052801561024b5781602001602082028036833780820191505090505b50905060005b835181101561032157600084828151811061026857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016102a8919061076d565b60206040518083038186803b1580156102c057600080fd5b505afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610670565b90508083838151811061030757fe5b602002602001018181525050508080600101915050610251565b508091505092915050565b60608151835114610372576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610369906107aa565b60405180910390fd5b6060825167ffffffffffffffff8111801561038c57600080fd5b506040519080825280602002602001820160405280156103bb5781602001602082028036833780820191505090505b50905060005b83518110156104a45760008482815181106103d857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a0823187848151811061040757fe5b60200260200101516040518263ffffffff1660e01b815260040161042b919061076d565b60206040518083038186803b15801561044357600080fd5b505afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b9190610670565b90508083838151811061048a57fe5b6020026020010181815250505080806001019150506103c1565b508091505092915050565b6000813590506104be816108af565b92915050565b600082601f8301126104d557600080fd5b81356104e86104e3826107fb565b6107ca565b9150818183526020840193506020810190508385602084028201111561050d57600080fd5b60005b8381101561053d578161052388826104af565b845260208401935060208301925050600181019050610510565b5050505092915050565b600081519050610556816108c6565b92915050565b6000806040838503121561056f57600080fd5b600061057d858286016104af565b925050602083013567ffffffffffffffff81111561059a57600080fd5b6105a6858286016104c4565b9150509250929050565b600080604083850312156105c357600080fd5b600083013567ffffffffffffffff8111156105dd57600080fd5b6105e9858286016104c4565b92505060206105fa858286016104af565b9150509250929050565b6000806040838503121561061757600080fd5b600083013567ffffffffffffffff81111561063157600080fd5b61063d858286016104c4565b925050602083013567ffffffffffffffff81111561065a57600080fd5b610666858286016104c4565b9150509250929050565b60006020828403121561068257600080fd5b600061069084828501610547565b91505092915050565b60006106a5838361075e565b60208301905092915050565b6106ba81610871565b82525050565b60006106cb82610837565b6106d5818561084f565b93506106e083610827565b8060005b838110156107115781516106f88882610699565b975061070383610842565b9250506001810190506106e4565b5085935050505092915050565b600061072b600f83610860565b91507f6e6f742073616d65206c656e67746800000000000000000000000000000000006000830152602082019050919050565b610767816108a3565b82525050565b600060208201905061078260008301846106b1565b92915050565b600060208201905081810360008301526107a281846106c0565b905092915050565b600060208201905081810360008301526107c38161071e565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156107f1576107f06108ad565b5b8060405250919050565b600067ffffffffffffffff821115610816576108156108ad565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061087c82610883565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565bfe5b6108b881610871565b81146108c357600080fd5b50565b6108cf816108a3565b81146108da57600080fd5b5056fea264697066735822122076a2a7b9a3170479be4e5b04b36dfd29145c955f8cccdee1d8e2173dc57cd2f564736f6c63430007030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "accountBalancesOf(address,address[])": {
        "params": {
          "account": "account",
          "tokenAddresses": "list of token addresses"
        }
      },
      "accountsBalanceOf(address[],address)": {
        "params": {
          "accounts": "list of accounts",
          "tokenAddress": "token addresses"
        }
      },
      "accountsBalancesOf(address[],address[])": {
        "params": {
          "accounts": "list of accounts",
          "tokenAddresses": "list of token addresses"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "accountBalancesOf(address,address[])": {
        "notice": "Fetch many token balances for a single account"
      },
      "accountsBalanceOf(address[],address)": {
        "notice": "Fetch a token balance for many accounts"
      },
      "accountsBalancesOf(address[],address[])": {
        "notice": "Fetch many token balances for a many accounts"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}