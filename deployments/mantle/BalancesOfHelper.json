{
  "address": "0xF0E9beDdd4F423B857078178ddF2fd8b32d2B7dD",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "accountBalancesOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "accountsBalanceOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "tokenAddresses",
          "type": "address[]"
        }
      ],
      "name": "accountsBalancesOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x914d94643cebc6af2d45cc74aa457d39d28c3d4ccd8f8ad2767986a0170353ff",
  "receipt": {
    "to": null,
    "from": "0xDcEDF06Fd33E1D7b6eb4b309f779a0e9D3172e44",
    "contractAddress": "0xF0E9beDdd4F423B857078178ddF2fd8b32d2B7dD",
    "transactionIndex": 0,
    "gasUsed": "496173",
    "logsBloom": "0x
    "blockHash": "0x323c340649d5338b21b59e04d87f1c797535560a3ee7c76c876e1da29ba43784",
    "transactionHash": "0x914d94643cebc6af2d45cc74aa457d39d28c3d4ccd8f8ad2767986a0170353ff",
    "logs": [],
    "blockNumber": 42246034,
    "cumulativeGasUsed": "496173",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "c328128031d80cddf6d25fb9771db5a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"accountBalancesOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"accountsBalanceOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"accountsBalancesOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accountBalancesOf(address,address[])\":{\"params\":{\"account\":\"account\",\"tokenAddresses\":\"list of token addresses\"}},\"accountsBalanceOf(address[],address)\":{\"params\":{\"accounts\":\"list of accounts\",\"tokenAddress\":\"token addresses\"}},\"accountsBalancesOf(address[],address[])\":{\"params\":{\"accounts\":\"list of accounts\",\"tokenAddresses\":\"list of token addresses\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accountBalancesOf(address,address[])\":{\"notice\":\"Fetch many token balances for a single account\"},\"accountsBalanceOf(address[],address)\":{\"notice\":\"Fetch a token balance for many accounts\"},\"accountsBalancesOf(address[],address[])\":{\"notice\":\"Fetch many token balances for a many accounts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/BalancesOfHelper.sol\":\"BalancesOfHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/helpers/BalancesOfHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ninterface IERC20 {\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\\ncontract BalancesOfHelper {\\n    constructor() {}\\n\\n    /**\\n     * @notice Fetch many token balances for a single account\\n     * @param account account\\n     * @param tokenAddresses list of token addresses\\n     */\\n    function accountBalancesOf(address account, address[] memory tokenAddresses)\\n        public\\n        view\\n        returns (uint256[] memory)\\n    {\\n        uint256[] memory balances = new uint256[](tokenAddresses.length);\\n        for (uint256 i = 0; i < tokenAddresses.length; i++) {\\n            uint256 balance;\\n            if (tokenAddresses[i] == address(0)) {\\n                balance = account.balance;\\n            }\\n            else {\\n                balance = IERC20(tokenAddresses[i]).balanceOf(account);\\n            }\\n            balances[i] = balance;\\n        }\\n        return balances;\\n    }\\n\\n    /**\\n     * @notice Fetch many token balances for a many accounts\\n     * @param accounts list of accounts\\n     * @param tokenAddresses list of token addresses\\n     */\\n    function accountsBalancesOf(address[] memory accounts, address[] memory tokenAddresses)\\n        public\\n        view\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == tokenAddresses.length, \\\"not same length\\\");\\n        uint256[] memory balances = new uint256[](tokenAddresses.length);\\n        for (uint256 i = 0; i < tokenAddresses.length; i++) {\\n            uint256 balance;\\n            if (tokenAddresses[i] == address(0)) {\\n                balance = accounts[i].balance;\\n            }\\n            else {\\n                balance = IERC20(tokenAddresses[i]).balanceOf(accounts[i]);\\n            }\\n            balances[i] = balance;\\n        }\\n        return balances;\\n    }\\n\\n    /**\\n     * @notice Fetch a token balance for many accounts\\n     * @param accounts list of accounts\\n     * @param tokenAddress token addresses\\n     */\\n    function accountsBalanceOf(address[] memory accounts, address tokenAddress) public view returns (uint256[] memory) {\\n        uint256[] memory balances = new uint256[](accounts.length);\\n        for (uint256 i = 0; i < accounts.length; i++) {\\n            uint256 balance;\\n            if (tokenAddress == address(0)) {\\n                balance = accounts[i].balance;\\n            }\\n            else {\\n                balance = IERC20(tokenAddress).balanceOf(accounts[i]);\\n            }\\n            balances[i] = balance;\\n        }\\n        return balances;\\n    }\\n}\\n\",\"keccak256\":\"0xdf5e4b52ce7a19a5c3b68254fee194daf63cd04ea1502594cd69181c7e2ec1bc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610807806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630b5cb275146100465780633a2047091461006f5780637dbb6f2614610082575b600080fd5b610059610054366004610641565b610095565b604051610066919061068f565b60405180910390f35b61005961007d3660046106d3565b6101f7565b610059610090366004610721565b610367565b60606000835167ffffffffffffffff8111156100b3576100b361056d565b6040519080825280602002602001820160405280156100dc578160200160208202803683370190505b50905060005b84518110156101ef5760006001600160a01b0385166101265785828151811061010d5761010d61077b565b60200260200101516001600160a01b03163190506101be565b846001600160a01b03166370a082318784815181106101475761014761077b565b60200260200101516040518263ffffffff1660e01b815260040161017a91906001600160a01b0391909116815260200190565b602060405180830381865afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb9190610791565b90505b808383815181106101d1576101d161077b565b602090810291909101015250806101e7816107aa565b9150506100e2565b509392505050565b60606000825167ffffffffffffffff8111156102155761021561056d565b60405190808252806020026020018201604052801561023e578160200160208202803683370190505b50905060005b83518110156101ef576000806001600160a01b031685838151811061026b5761026b61077b565b60200260200101516001600160a01b03160361029257506001600160a01b03851631610336565b8482815181106102a4576102a461077b565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152909116906370a0823190602401602060405180830381865afa15801561030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103339190610791565b90505b808383815181106103495761034961077b565b6020908102919091010152508061035f816107aa565b915050610244565b606081518351146103d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f742073616d65206c656e6774680000000000000000000000000000000000604482015260640160405180910390fd5b6000825167ffffffffffffffff8111156103f4576103f461056d565b60405190808252806020026020018201604052801561041d578160200160208202803683370190505b50905060005b83518110156101ef576000806001600160a01b031685838151811061044a5761044a61077b565b60200260200101516001600160a01b03160361048b578582815181106104725761047261077b565b60200260200101516001600160a01b031631905061053c565b84828151811061049d5761049d61077b565b60200260200101516001600160a01b03166370a082318784815181106104c5576104c561077b565b60200260200101516040518263ffffffff1660e01b81526004016104f891906001600160a01b0391909116815260200190565b602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190610791565b90505b8083838151811061054f5761054f61077b565b60209081029190910101525080610565816107aa565b915050610423565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461059a57600080fd5b919050565b600082601f8301126105b057600080fd5b8135602067ffffffffffffffff808311156105cd576105cd61056d565b8260051b604051601f19603f830116810181811084821117156105f2576105f261056d565b60405293845285810183019383810192508785111561061057600080fd5b83870191505b848210156106365761062782610583565b83529183019190830190610616565b979650505050505050565b6000806040838503121561065457600080fd5b823567ffffffffffffffff81111561066b57600080fd5b6106778582860161059f565b92505061068660208401610583565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156106c7578351835292840192918401916001016106ab565b50909695505050505050565b600080604083850312156106e657600080fd5b6106ef83610583565b9150602083013567ffffffffffffffff81111561070b57600080fd5b6107178582860161059f565b9150509250929050565b6000806040838503121561073457600080fd5b823567ffffffffffffffff8082111561074c57600080fd5b6107588683870161059f565b9350602085013591508082111561076e57600080fd5b506107178582860161059f565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156107a357600080fd5b5051919050565b6000600182016107ca57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205af931640adc5c51e923890bcaf0c82d617543c530dedb0bbd9817bb5c4db43d64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630b5cb275146100465780633a2047091461006f5780637dbb6f2614610082575b600080fd5b610059610054366004610641565b610095565b604051610066919061068f565b60405180910390f35b61005961007d3660046106d3565b6101f7565b610059610090366004610721565b610367565b60606000835167ffffffffffffffff8111156100b3576100b361056d565b6040519080825280602002602001820160405280156100dc578160200160208202803683370190505b50905060005b84518110156101ef5760006001600160a01b0385166101265785828151811061010d5761010d61077b565b60200260200101516001600160a01b03163190506101be565b846001600160a01b03166370a082318784815181106101475761014761077b565b60200260200101516040518263ffffffff1660e01b815260040161017a91906001600160a01b0391909116815260200190565b602060405180830381865afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb9190610791565b90505b808383815181106101d1576101d161077b565b602090810291909101015250806101e7816107aa565b9150506100e2565b509392505050565b60606000825167ffffffffffffffff8111156102155761021561056d565b60405190808252806020026020018201604052801561023e578160200160208202803683370190505b50905060005b83518110156101ef576000806001600160a01b031685838151811061026b5761026b61077b565b60200260200101516001600160a01b03160361029257506001600160a01b03851631610336565b8482815181106102a4576102a461077b565b60209081029190910101516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152909116906370a0823190602401602060405180830381865afa15801561030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103339190610791565b90505b808383815181106103495761034961077b565b6020908102919091010152508061035f816107aa565b915050610244565b606081518351146103d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f742073616d65206c656e6774680000000000000000000000000000000000604482015260640160405180910390fd5b6000825167ffffffffffffffff8111156103f4576103f461056d565b60405190808252806020026020018201604052801561041d578160200160208202803683370190505b50905060005b83518110156101ef576000806001600160a01b031685838151811061044a5761044a61077b565b60200260200101516001600160a01b03160361048b578582815181106104725761047261077b565b60200260200101516001600160a01b031631905061053c565b84828151811061049d5761049d61077b565b60200260200101516001600160a01b03166370a082318784815181106104c5576104c561077b565b60200260200101516040518263ffffffff1660e01b81526004016104f891906001600160a01b0391909116815260200190565b602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190610791565b90505b8083838151811061054f5761054f61077b565b60209081029190910101525080610565816107aa565b915050610423565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461059a57600080fd5b919050565b600082601f8301126105b057600080fd5b8135602067ffffffffffffffff808311156105cd576105cd61056d565b8260051b604051601f19603f830116810181811084821117156105f2576105f261056d565b60405293845285810183019383810192508785111561061057600080fd5b83870191505b848210156106365761062782610583565b83529183019190830190610616565b979650505050505050565b6000806040838503121561065457600080fd5b823567ffffffffffffffff81111561066b57600080fd5b6106778582860161059f565b92505061068660208401610583565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156106c7578351835292840192918401916001016106ab565b50909695505050505050565b600080604083850312156106e657600080fd5b6106ef83610583565b9150602083013567ffffffffffffffff81111561070b57600080fd5b6107178582860161059f565b9150509250929050565b6000806040838503121561073457600080fd5b823567ffffffffffffffff8082111561074c57600080fd5b6107588683870161059f565b9350602085013591508082111561076e57600080fd5b506107178582860161059f565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156107a357600080fd5b5051919050565b6000600182016107ca57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205af931640adc5c51e923890bcaf0c82d617543c530dedb0bbd9817bb5c4db43d64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "accountBalancesOf(address,address[])": {
        "params": {
          "account": "account",
          "tokenAddresses": "list of token addresses"
        }
      },
      "accountsBalanceOf(address[],address)": {
        "params": {
          "accounts": "list of accounts",
          "tokenAddress": "token addresses"
        }
      },
      "accountsBalancesOf(address[],address[])": {
        "params": {
          "accounts": "list of accounts",
          "tokenAddresses": "list of token addresses"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "accountBalancesOf(address,address[])": {
        "notice": "Fetch many token balances for a single account"
      },
      "accountsBalanceOf(address[],address)": {
        "notice": "Fetch a token balance for many accounts"
      },
      "accountsBalancesOf(address[],address[])": {
        "notice": "Fetch many token balances for a many accounts"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}